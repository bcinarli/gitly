{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/classnames/index.js","source/scripts/components/header.js","source/scripts/components/meta.js","source/scripts/components/notification.js","source/scripts/components/preloader.js","source/scripts/components/search-form.js","source/scripts/components/user/card.js","source/scripts/components/user/repos.js","source/scripts/constants/actions/notification.js","source/scripts/constants/actions/ui.js","source/scripts/containers/index.js","source/scripts/index.js","source/scripts/modules/notifications.js","source/scripts/modules/ui.js","source/scripts/modules/user.js","source/scripts/reducers/index.js","source/scripts/reducers/notification.js","source/scripts/reducers/ui.js","source/scripts/routes/index.js","source/scripts/store/index.js","source/scripts/system/ajax.js","source/scripts/system/common.js","source/scripts/system/store.js","source/scripts/views/home.js","source/scripts/views/index.js","source/scripts/views/user.js"],"names":[],"mappings":"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","file":"gitly.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\n\nimport SearchForm from './search-form';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <header id=\"masthead\" className=\"page-header\">\n                <div className=\"container\">\n                    <a href=\"./\" className=\"branding\">\n                        <i className=\"icon-octocat icon-2x\" />\n                        <span className=\"branding-name\">Gitly</span>\n                        <span className=\"branding-info\">a simple react app</span>\n                    </a>\n\n                    <SearchForm />\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\n\nclass Meta extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <span className=\"single-meta\">\n                {\n                    this.props.icon\n                        ? <i className={'icon-' + this.props.icon} />\n                        : ''\n                }\n                {\n                    this.props.title\n                        ? <span className=\"single-meta-title\">{this.props.title}</span>\n                        : ''\n\n                }\n                {\n                    this.props.value\n                }\n            </span>\n        )\n    }\n}\n\nexport default Meta;","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\n\nclass Notification extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false\n        };\n\n        this.open  = this.open.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    componentDidMount() {\n        this.open();\n    }\n\n    componentWillReceiveProps(newProps) {\n        if(!this.state.isVisible && newProps) {\n            this.open();\n        }\n    }\n\n    close() {\n        this.setState({\n            isVisible: false\n        });\n\n        if(this.props.onClose) {\n            this.props.onClose();\n        }\n\n        this.props.dispatch({\n            type: 'HIDE_NOTIFICATION'\n        });\n    }\n\n    open() {\n        this.setState({\n            isVisible: true\n        });\n\n        if(this.props.onOpen) {\n            this.props.onOpen();\n        }\n    }\n\n    render() {\n        return this.state.isVisible ? (\n            <div className={classNames('notification', this.props.className)}>\n                <div className=\"notification-content\">\n                    {\n                        this.props.title\n                            ? <h3 className=\"notification-content-title\">{this.props.title}</h3>\n                            : ''\n                    }\n\n                    <div className=\"notification-content-text\">\n                        {\n                            this.props.content\n                                ?\n                            (() => {\n                                let Content = this.props.content;\n\n                                return (\n                                    <Content />\n                                )\n                            })()\n                                : this.props.children\n                        }\n                    </div>\n                    {\n                        this.props.closable\n                            ? <a className={classNames('notification-close')} onClick={this.close}>X</a>\n                            : ''\n                    }\n                </div>\n            </div>\n        )\n            : false\n    }\n}\n\nNotification.propTypes = {\n    className: React.PropTypes.string,\n    title:     React.PropTypes.string,\n    closable:  React.PropTypes.bool\n};\n\nNotification.defaultProps = {\n    title:    '',\n    closable: true\n};\n\nexport default connect()(Notification);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\n\nclass Preloader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={classNames('preloader', {\n                'preloader-start': this.props.ui === 'isLoading',\n                'preloader-end':   this.props.ui === 'isLoaded'\n            })}></div>\n        )\n    }\n}\n\nconst MapStatesToProps = (store) => ({\n    ui: store.ui.ui\n});\n\nexport default connect(MapStatesToProps)(Preloader);\n\n","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\n\nclass SearchField extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.submit = this.submit.bind(this);\n    }\n\n    submit(e) {\n        e.preventDefault();\n\n        let q = this.refs.form.querySelector('#q');\n\n        if(q.value.length > 0) {\n            this.context.router.push({\n                pathname: '/' + q.value\n            });\n        }\n    }\n\n    render() {\n        return (\n            <form ref=\"form\" onSubmit={this.submit} className=\"search-form\">\n                <label className=\"item item-stacked\">\n                    <input type=\"search\" name=\"q\" id=\"q\" className=\"one-whole\" placeholder=\"Search for a Github user\" />\n                    <i className=\"icon-search\" />\n                </label>\n            </form>\n        )\n    }\n}\n\nSearchField.contextTypes = {\n    router: React.PropTypes.object.isRequired\n};\n\nexport default SearchField;","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\n\nimport {getFormattedDate} from '../../system/common';\n\nimport Meta from '../meta';\n\nclass UserCard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"user-card\">\n                <div className=\"user-avatar\">\n                    <img src={this.props.avatar_url} alt={this.props.name} className=\"user-avatar-photo\" />\n                </div>\n                <div className=\"user-info\">\n                    <h2 className=\"user-name\">\n                        <a href={this.props.html_url} target=\"_blank\">{this.props.name}</a>\n                    </h2>\n                    <div className=\"user-meta\">\n                        <Meta icon=\"clock\" value={'Joined on ' + getFormattedDate(this.props.created_at)} />\n                        <Meta icon=\"location\" value={this.props.location} />\n                        <Meta icon=\"branch\" value={this.props.public_repos + ' public repo(s)'} />\n                        <Meta icon=\"person\" value={this.props.followers + ' follower(s)'} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserCard;","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport ui from '../../modules/ui';\nimport {getUserRepos} from '../../modules/user';\nimport notifications from '../../modules/notifications';\n\nimport Meta from '../meta';\nimport Notification from '../notification';\n\nclass UserRepos extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            repos: []\n        };\n    }\n\n    componentDidMount() {\n        this.showRepos(this.props.login);\n    }\n\n    componentWillReceiveProps(newProps) {\n        if(newProps.login !== this.props.login) {\n            this.showRepos(newProps.login);\n        }\n    }\n\n    showRepos(username) {\n        ui.startLoading();\n\n        getUserRepos(username, (response) => {\n            if(response.status === 'success') {\n                this.setState({\n                    repos: response.details\n                });\n            }\n\n            else {\n                notifications.systemError(response.details.statusText);\n            }\n\n            ui.stopLoading();\n        });\n    }\n\n    render() {\n        return (\n            <div className={classNames('user-repos-wrapper', {'is-hidden': !this.props.id})}>\n                {\n                    this.props.public_repos > 0\n                        ?\n                    <div className=\"user-repo-list\">\n                        <h3 className=\"user-repo-list-title\">User Repos</h3>\n                        <ol className=\"user-repos\">\n                            {\n                                this.state.repos.map((repo) => {\n                                    return (\n                                        <li key={repo.id} className=\"user-repo\">\n                                            <a href={repo.html_url} className=\"user-repo-name\" target=\"_blank\">\n                                                {repo.name}\n                                                <i className=\"icon-link-external\" />\n                                            </a>\n\n                                            <div className=\"user-repo-description\">\n                                                <p>{repo.description}</p>\n                                            </div>\n\n                                            <div className=\"user-repo-meta\">\n                                                {\n                                                    repo.language !== null\n                                                        ? <Meta value={repo.language} />\n                                                        : ''\n                                                }\n                                                <Meta icon=\"repo-forked\" title=\"Forks\" value={repo.forks_count} />\n                                                <Meta icon=\"star\" title=\"Star\" value={repo.stargazers_count} />\n                                                <Meta icon=\"eye\" title=\"Watchers\" value={repo.watchers_count} />\n                                            </div>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ol>\n                    </div>\n                        :\n                    <Notification className=\"notification-info\" closable={false}>\n                        <p>User does not have any public repositories.</p>\n                    </Notification>\n                }\n            </div>\n        )\n    }\n}\n\nexport default UserRepos;","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {createConstants} from '../../system/store';\n\nexport default createConstants(\n    'SHOW_NOTIFICATION',\n    'HIDE_NOTIFICATION'\n);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {createConstants} from '../../system/store';\n\nexport default createConstants(\n    'IS_LOADING',\n    'IS_LOADED',\n    'ADD_PAGE_CLASS',\n    'REMOVE_PAGE_CLASS'\n);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\n\nimport Header from '../components/header';\nimport Preloader from '../components/preloader';\nimport Notification from '../components/notification';\n\nclass GitlyApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className={classNames('gitly-app', this.props.pageClass)}>\n                {\n                    this.props.pageClass !== 'home'\n                        ? <Header />\n                        : ''\n                }\n                <Preloader />\n                <div id=\"main\" className=\"page-main container\">\n                    {\n                        this.props.showNotification\n                            ? <Notification {...this.props.notification} />\n                            : ''\n                    }\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapStatesToProps = (store) => ({\n    ui:               store.ui.ui,\n    pageClass:        store.ui.pageClass,\n    notification:     store.notification.notification,\n    showNotification: store.notification.showNotification\n});\n\nexport default connect(MapStatesToProps)(GitlyApp);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React, {PropTypes} from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {Router, hashHistory} from 'react-router';\n\nimport {store} from './store';\nimport {routes} from './routes'\n\nconst Root = ({store}) => (\n    <Provider store={store}>\n        <Router history={hashHistory}>\n            {routes}\n        </Router>\n    </Provider>\n);\n\nrender(<Root store={store} />, document.getElementById('gitly-app'));","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {store} from '../store';\n\nconst notification = (type, message) => {\n    store.dispatch({\n        type:    'SHOW_NOTIFICATION',\n        payload: {\n            className: type,\n            content:   message,\n            closable:  false\n        }\n    })\n};\n\nconst notificationWarning = (message) => {\n    return notification('notification-warning', message);\n};\n\nconst notificationError = (message) => {\n    return notification('notification-error', message);\n};\n\nexport const hideNotification = () => {\n    store.dispatch({\n        type: 'HIDE_NOTIFICATION'\n    });\n};\n\nexport const userNotFound = (username) => {\n    let message = () => {\n        return (\n            <p>We cannot find a user called <strong>{username}</strong>. You can search another\n                user by using the search field at the header</p>\n        )\n    };\n\n    notificationWarning(message);\n};\n\nexport const systemError = (error) => {\n    let message = () => {\n        return (\n            <div>\n                <p>There was an error while connecting to API. Please try sometime later.</p>\n                <p>Error Status: <br /> {error}</p>\n            </div>\n        )\n    };\n\n    notificationError(message);\n};\n\nexport default {\n    hideNotification,\n    systemError,\n    userNotFound\n}","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {store} from '../store';\n\nexport const startLoading = () => {\n    store.dispatch({\n        type: 'IS_LOADING'\n    });\n};\n\nexport const stopLoading = () => {\n    store.dispatch({\n        type: 'IS_LOADED'\n    });\n};\n\nexport const addPageClass = (pageClass) => {\n    store.dispatch({\n        type:    'ADD_PAGE_CLASS',\n        payload: {\n            pageClass: pageClass\n        }\n    });\n};\n\nexport default {\n    startLoading,\n    stopLoading,\n    addPageClass\n};","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {plainGet} from '../system/ajax';\n\nexport const getUser = (username, callback) => {\n    let user = encodeURI(username);\n\n    plainGet('https://api.github.com/users/' + user, callback);\n};\n\nexport const getUserRepos = (username, callback) => {\n    let user = encodeURI(username);\n\n    plainGet('https://api.github.com/users/' + user + '/repos', callback);\n};","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {combineReducers} from 'redux';\nimport ui from './ui';\nimport notification from './notification';\n\nexport default combineReducers({\n    ui,\n    notification\n});","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {createReducer} from '../system/store';\nimport * as notificationActions from '../constants/actions/notification';\n\nconst initialState = {\n    notification:     {},\n    showNotification: false\n};\n\nexport default createReducer(initialState, {\n    [notificationActions.default.SHOW_NOTIFICATION]: (state, payload) => {\n        return Object.assign({}, state, {\n            notification:     payload,\n            showNotification: true\n        });\n    },\n    [notificationActions.default.HIDE_NOTIFICATION]: (state) => {\n        return Object.assign({}, state, {\n            notification:     {},\n            showNotification: false\n        });\n    }\n});\n","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {createReducer} from '../system/store';\nimport * as uiActions from '../constants/actions/ui';\n\nconst initialState = {\n    ui:        '',\n    pageClass: '',\n};\n\nexport default createReducer(initialState, {\n    [uiActions.default.IS_LOADING]: (state) => {\n        return Object.assign({}, state, {\n            ui: 'isLoading'\n        });\n    },\n    [uiActions.default.IS_LOADED]:  (state) => {\n        return Object.assign({}, state, {\n            ui: 'isLoaded'\n        });\n    },\n    [uiActions.default.ADD_PAGE_CLASS]:       (state, payload) => {\n        return Object.assign({}, state, {\n            pageClass: payload.pageClass\n        });\n    },\n    [uiActions.default.REMOVE_PAGE_CLASS]:    (state) => {\n        return Object.assign({}, state, {\n            pageClass: ''\n        });\n    }\n});\n","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {Route, IndexRoute} from 'react-router';\n\nimport GitlyApp from '../containers';\n\nimport * as Views from '../views';\n\nexport const routes = (\n    <Route component={GitlyApp}>\n        <IndexRoute component={Views.Home} />\n        <Route path=\"/\" component={Views.Home} />\n        <Route path=\"/:user\" components={Views.User} />\n    </Route>\n);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {createStore} from 'redux';\nimport RootReducer from '../reducers';\n\nexport const store = createStore(RootReducer);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport {tryParse} from './common';\n\nexport function $http(url) {\n    let ajax = function(method, url, data) {\n\n        let promise = new Promise(function(resolve, reject) {\n            let request     = new XMLHttpRequest(),\n                uri         = url,\n                postData    = '',\n                contentType = 'application/json; charset:utf-8';\n\n            if(data && method === 'GET') {\n                uri += '?';\n                let argcount = 0;\n                for(var key in data) {\n                    if(data.hasOwnProperty(key)) {\n                        if(argcount++) {\n                            uri += '&';\n                        }\n                        uri += encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n                    }\n                }\n            }\n\n            request.open(method, uri);\n            request.setRequestHeader('Content-Type', contentType);\n\n            request.onload = function() {\n                if(this.status >= 200 && this.status < 400) {\n                    let response = this.response;\n\n                    resolve(tryParse(response));\n                } else {\n                    reject({\n                        status:           this.status,\n                        statusText:       this.statusText,\n                        response:         tryParse(this.response),\n                        originalResponse: this\n                    });\n                }\n            };\n\n            request.onerror = function() {\n                reject({\n                    status:           this.status,\n                    statusText:       this.statusText,\n                    response:         tryParse(this.response),\n                    originalResponse: this\n                });\n            };\n\n            request.send(postData);\n        });\n\n        return promise;\n    };\n\n    return {\n        'get':    function(data, options) {\n            return ajax('GET', url, data, options);\n        },\n        'post':   function(data, options) {\n            return ajax('POST', url, data, options);\n        },\n        'put':    function(data, options) {\n            return ajax('PUT', url, data, options);\n        },\n        'delete': function(data, options) {\n            return ajax('DELETE', url, data, options);\n        }\n    };\n}\n\nexport const plainGet = (url, callback) => {\n    $http(url)\n        .get()\n        .then((response) => {\n            callback({\n                status:  'success',\n                details: response\n            });\n        })\n        .catch((response) => {\n            callback({\n                status:  'error',\n                details: response\n            });\n        });\n}","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nexport const tryParse = (str) => {\n    try {\n        return JSON.parse(str);\n    }\n    catch(e) {\n        return str;\n    }\n};\n\nexport const getFormattedDate = (date) => {\n    let _date = new Date(date);\n\n    return _date.toDateString();\n};","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nexport function createConstants(...constants) {\n    return constants.reduce((acc, constant) => {\n        acc[constant] = constant;\n        return acc;\n    }, {});\n}\n\nexport function createReducer(initialState, reducerMap) {\n    return (state = initialState, action) => {\n        const reducer = reducerMap[action.type];\n\n        return reducer\n            ? reducer(state, action.payload)\n            : state;\n    };\n}","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport SearchForm from '../components/search-form';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.dispatch({\n            type:    'ADD_PAGE_CLASS',\n            payload: {\n                pageClass: 'home'\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"page-content\">\n                <div className=\"landing\">\n                    <h1 className=\"landing-branding\">\n                        Gitly\n                    </h1>\n                    <h2 className=\"landing-subtitle\">a simple react app for listing user repositories</h2>\n                    <SearchForm />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Home);","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport _Home from './home';\nexport {_Home as Home};\nimport _User from './user';\nexport {_User as User};","/**\n * @author Bilal Cinarli\n */\n\n'use strict';\n\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nimport ui from '../modules/ui';\nimport {getUser} from '../modules/user';\nimport notifications from '../modules/notifications';\n\nimport UserCard from '../components/user/card';\nimport UserRepos from '../components/user/repos';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: false\n        }\n    }\n\n    componentDidMount() {\n        ui.addPageClass('user');\n\n        this.showUser(this.props.params.user);\n    }\n\n    componentWillReceiveProps(newProps) {\n        if(newProps.params !== this.props.params) {\n            this.showUser(newProps.params.user);\n        }\n    }\n\n    showUser(user) {\n        ui.startLoading();\n\n        getUser(user, (response) => {\n            if(response.status === 'success') {\n                notifications.hideNotification();\n\n                this.setState({\n                    user: response.details\n                });\n            }\n            else {\n                this.setState({\n                    user: false\n                });\n\n                if(response.details.status === 404) {\n                    notifications.userNotFound(user);\n                }\n\n                else {\n                    notifications.systemError(response.details.statusText);\n                }\n            }\n        });\n\n        ui.stopLoading();\n    }\n\n    render() {\n        return (\n            <div className=\"page-content\">\n                {\n                    this.state.user\n                        ? <UserCard {...this.state.user} />\n                        : ''\n                }\n                {\n                    this.state.user\n                        ? <UserRepos {...this.state.user} />\n                        : ''\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect()(User);"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}